{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/reactstrap/es/Button.js","pages/other/LoginRegister.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","value","ref","current","useEventCallback","fn","apply","arguments","dataAttr","property","concat","dataProp","useMounted","mounted","isMounted","usePrevious","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","_excluded","propTypes","active","bool","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","cssModule","close","Button","_React$Component","props","_this","this","_proto","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","btnOutlineColor","classes","href","defaultAriaLabel","type","undefined","Component","defaultProps","LoginRegister","otpHandler","console","log","state","axios","post","mobile","otp","otpnumber","then","response","localStorage","setItem","token","history","push","pathname","catch","error","handlechange","setState","target","name","loginHandler","NaN","parseInt","email","password","data","changeHandler","submitHandler","firstname","lastname","content","headerTop","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","onSubmit","placeholder","onChange","method"],"mappings":"mHAAA,oCAoBeA,IAhBI,WACjB,OACE,yBAAKC,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAD,CACEC,UAAW,mCACXC,KAAMC,IACNC,UAAW,c,iCCZvB,WAmBe,IARf,SAAyBC,GACvB,IAAIC,EAAM,iBAAOD,GAIjB,OAHA,qBAAU,WACRC,EAAIC,QAAUF,IACb,CAACA,IACGC,I,iCChBT,sDAEe,SAASE,EAAiBC,GACvC,IAAIH,EAAM,YAAgBG,GAC1B,OAAO,uBAAY,WACjB,OAAOH,EAAIC,SAAWD,EAAIC,QAAQG,MAAMJ,EAAKK,aAC5C,CAACL,M,iCCNN,oEAEO,SAASM,EAASC,GACvB,MAAO,GAAGC,OAHkB,eAGOA,OAAOD,GAErC,SAASE,EAASF,GACvB,MAAO,GAAGC,OALiB,QAKOA,OAAOD,K,iCCN3C,6CAsBe,SAASG,IACtB,IAAIC,EAAU,kBAAO,GACjBC,EAAY,kBAAO,WACrB,OAAOD,EAAQV,WAOjB,OALA,qBAAU,WACR,OAAO,WACLU,EAAQV,SAAU,KAEnB,IACIW,EAAUX,U,iCChCnB,6CAmBe,SAASY,EAAYd,GAClC,IAAIC,EAAM,iBAAO,MAIjB,OAHA,qBAAU,WACRA,EAAIC,QAAUF,KAETC,EAAIC,U,iCCxBb,sCAAIa,EAAUC,SAASC,UAAUC,KAAKC,KAAKH,SAASC,UAAUE,KAAM,GAAGC,OAQxD,SAASC,EAAIC,EAASC,GACnC,OAAOR,EAAQO,EAAQE,iBAAiBD,M,iCCT1C,6FAIIE,EAAY,CAAC,SAAU,aAAc,QAAS,YAAa,QAAS,YAAa,QAAS,UAAW,OAAQ,MAAO,YAKpHC,EAAY,CACdC,OAAQ,IAAUC,KAClB,aAAc,IAAUC,OACxBC,MAAO,IAAUF,KACjBG,MAAO,IAAUF,OACjBG,SAAU,IAAUJ,KACpBK,QAAS,IAAUL,KACnBM,IAAK,IACLC,SAAU,IAAUC,UAAU,CAAC,IAAUC,OAAQ,IAAUC,KAAM,IAAUT,SAC3EU,QAAS,IAAUD,KACnBE,KAAM,IAAUX,OAChBY,SAAU,IAAUC,KACpB/C,UAAW,IAAUkC,OACrBc,UAAW,IAAUN,OACrBO,MAAO,IAAUhB,MAOfiB,EAAsB,SAAUC,GAGlC,SAASD,EAAOE,GACd,IAAIC,EAIJ,OAFAA,EAAQF,EAAiB3B,KAAK8B,KAAMF,IAAUE,MACxCV,QAAUS,EAAMT,QAAQrB,KAAK,YAAuB8B,IACnDA,EAPT,YAAeH,EAAQC,GAUvB,IAAII,EAASL,EAAO5B,UAyDpB,OAvDAiC,EAAOX,QAAU,SAAiBY,GAChC,IAAIF,KAAKF,MAAMf,SAKf,OAAIiB,KAAKF,MAAMR,QACNU,KAAKF,MAAMR,QAAQY,QAD5B,EAJEA,EAAEC,kBASNF,EAAOG,OAAS,WACd,IAAIC,EAAcL,KAAKF,MACnBpB,EAAS2B,EAAY3B,OACrB4B,EAAYD,EAAY,cACxBxB,EAAQwB,EAAYxB,MACpBnC,EAAY2D,EAAY3D,UACxBiD,EAAQU,EAAYV,MACpBD,EAAYW,EAAYX,UACxBZ,EAAQuB,EAAYvB,MACpBE,EAAUqB,EAAYrB,QACtBO,EAAOc,EAAYd,KACnBgB,EAAMF,EAAYpB,IAClBC,EAAWmB,EAAYnB,SACvBsB,EAAa,YAA8BH,EAAa7B,GAExDmB,GAAwC,qBAAxBa,EAAWhB,WAC7BgB,EAAWhB,SAAwB,IAAMiB,cAAc,OAAQ,CAC7D,eAAe,GACd,SAGL,IAAIC,EAAkB,OAAS1B,EAAU,WAAa,IAAM,IAAMF,EAC9D6B,EAAU,YAAgB,IAAWjE,EAAW,CAClDiD,MAAOA,GACNA,GAAS,MAAOA,GAASe,IAAiBnB,GAAO,OAASA,IAAcV,GAAQ,YAAqB,CACtGH,OAAQA,EACRK,SAAUiB,KAAKF,MAAMf,WACnBW,GAEAc,EAAWI,MAAgB,WAARL,IACrBA,EAAM,KAGR,IAAIM,EAAmBlB,EAAQ,QAAU,KACzC,OAAoB,IAAMc,cAAcF,EAAK,YAAS,CACpDO,KAAc,WAARP,GAAoBC,EAAWlB,QAAU,cAAWyB,GACzDP,EAAY,CACb9D,UAAWiE,EACX3D,IAAKkC,EACLI,QAASU,KAAKV,QACd,aAAcgB,GAAaO,MAIxBjB,EApEiB,CAqExB,IAAMoB,WAERpB,EAAOnB,UAAYA,EACnBmB,EAAOqB,aA7EY,CACjBnC,MAAO,YACPG,IAAK,UA4EQ,O,0OC1FMiC,E,kDACnB,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAkBRqB,WAAa,SAACjB,GACZA,EAAEC,iBACFiB,QAAQC,IAAI,EAAKC,OACjBC,IACGC,KAAK,yCAA0C,CAC9CC,OAAQ,EAAKH,MAAMG,OAEnBC,IAAK,EAAKJ,MAAMK,YAEjBC,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GAEZC,aAAaC,QAAQ,aAAc,EAAKT,MAAMU,OAU9C,EAAKlC,MAAMmC,QAAQC,KAAK,CACtBC,SAAS,aAGZC,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,EAAMR,cA9CL,EAmDnBS,aAAe,SAACpC,GACdA,EAAEC,iBACF,EAAKoC,SAAL,eAAiBrC,EAAEsC,OAAOC,KAAOvC,EAAEsC,OAAOzF,SArDzB,EAwDnB2F,aAAe,SAACxC,GACdA,EAAEC,iBAEFoB,IACGC,KAAK,qCAAsC,CAC1CC,OACgCkB,KAA9BC,SAAS,EAAKtB,MAAMuB,OAChBD,SAAS,EAAKtB,MAAMuB,OACpB,OACNA,MAAO,EAAKvB,MAAMuB,MAClBC,SAAU,EAAKxB,MAAMwB,WAEtBlB,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GAEZC,aAAaC,QAAQ,aAAcF,EAASkB,KAAKf,OACjD,EAAKlC,MAAMmC,QAAQC,KAAK,YAEzBE,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIgB,EAAMR,cA5EL,EAgFnBmB,cAAgB,SAAC9C,GACfA,EAAEC,iBACF,EAAKoC,SAAL,eAAiBrC,EAAEsC,OAAOC,KAAOvC,EAAEsC,OAAOzF,SAlFzB,EAoFnBkG,cAAgB,SAAC/C,GACfA,EAAEC,iBACF,EAAKoC,SAAS,CAAEb,KAAK,IACrBH,IACGC,KAAK,sCAAuC,EAAKF,OACjDM,MAAK,SAACC,GACLT,QAAQC,IAAIQ,GAEZ,EAAKU,SAAS,CACZP,MAAOH,EAASkB,KAAKf,WAIxBI,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,EAAMR,aAGtBN,IACGC,KAAK,uCAAwC,CAC5CC,OAAQ,EAAKH,MAAMG,SAGpBG,MAAK,SAACC,GACLT,QAAQC,IAAIQ,MAIbO,OAAM,SAACC,GACNjB,QAAQC,IAAIgB,EAAMR,cA9GtB,EAAKP,MAAQ,CACX4B,UAAW,GACXC,SAAU,GACVN,MAAO,GACPpB,OAAQ,GACRqB,SAAU,GACVpB,KAAK,EACLC,UAAW,GACXK,MAAO,IAVQ,E,0CAmHnB,WAEE,OADAZ,QAAQC,IAAIrB,KAAKsB,MAAMI,KAErB,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,iDACA,0BACEe,KAAK,cACLW,QAAQ,gEAGZ,kBAAC,IAAD,CAAWC,UAAU,WACnB,yBAAK3G,UAAU,qCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wDACb,yBAAKA,UAAU,sCACZsD,KAAKsB,MAAMI,IACV,yBAAKhF,UAAU,0BACb,kBAAC,IAAI4G,UAAL,CAAeC,iBAAiB,SAC9B,kBAAC,IAAD,CACEC,QAAQ,QACR9G,UAAU,2BAEV,kBAAC,IAAI+G,KAAL,KACE,kBAAC,IAAIC,KAAL,CAAUC,SAAS,SACjB,uCAGJ,kBAAC,IAAIF,KAAL,KACE,kBAAC,IAAIC,KAAL,CAAUC,SAAS,YACjB,2CAIN,kBAAC,IAAIC,QAAL,KACE,kBAAC,IAAIC,KAAL,CAAUF,SAAS,SACjB,yBAAKjH,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BAAMoH,SAAU9D,KAAK0C,cACnB,2BACE5B,KAAK,OACL2B,KAAK,QACLsB,YAAY,iBACZhH,MAAOiD,KAAKsB,MAAMuB,MAClBmB,SAAUhE,KAAKsC,eASjB,2BACExB,KAAK,WACL2B,KAAK,WACLsB,YAAY,WACZhH,MAAOiD,KAAKsB,MAAMwB,SAClBkB,SAAUhE,KAAKsC,eAEjB,yBAAK5F,UAAU,cACb,yBAAKA,UAAU,qBACf,4BAAQoE,KAAK,UACX,6CAUZ,kBAAC,IAAI+C,KAAL,CAAUF,SAAS,YACjB,yBAAKjH,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BACEA,UAAU,cACVoH,SAAU9D,KAAKiD,cACfgB,OAAO,QAEP,2BACEnD,KAAK,OACL2B,KAAK,YACLsB,YAAY,uBACZhH,MAAOiD,KAAKsB,MAAM4B,UAClBc,SAAUhE,KAAKgD,gBAEjB,2BACElC,KAAK,OACL2B,KAAK,WACLsB,YAAY,sBACZhH,MAAOiD,KAAKsB,MAAM6B,SAClBa,SAAUhE,KAAKgD,gBAEjB,2BACElC,KAAK,QACL2B,KAAK,QACLsB,YAAY,mBACZhH,MAAOiD,KAAKsB,MAAMuB,MAClBmB,SAAUhE,KAAKgD,gBAEjB,2BACElC,KAAK,SACL2B,KAAK,SACLsB,YAAY,wBACZhH,MAAOiD,KAAKsB,MAAMG,OAClBuC,SAAUhE,KAAKgD,gBAEjB,2BACElC,KAAK,WACL2B,KAAK,WACLsB,YAAY,WACZhH,MAAOiD,KAAKsB,MAAMwB,SAClBkB,SAAUhE,KAAKgD,gBAEjB,yBAAKtG,UAAU,cACb,4BAAQoE,KAAK,UACX,mDAWlB,oCACE,yBAAKpE,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BAAMoH,SAAU9D,KAAKmB,YACnB,2BACEL,KAAK,SACL2B,KAAK,YACLsB,YAAY,SACZhH,MAAOiD,KAAKsB,MAAMK,UAClBqC,SAAUhE,KAAKsC,eAEjB,yBAAK5F,UAAU,cACb,yBAAKA,UAAU,qBACf,kBAAC,IAAD,CAAQoE,KAAK,UACX,wD,GAnQWE","file":"static/js/34.ebcf29e1.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","export var ATTRIBUTE_PREFIX = \"data-rr-ui-\";\nexport var PROPERTY_PREFIX = \"rrUi\";\nexport function dataAttr(property) {\n  return \"\".concat(ATTRIBUTE_PREFIX).concat(property);\n}\nexport function dataProp(property) {\n  return \"\".concat(PROPERTY_PREFIX).concat(property);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","// import PropTypes from \"prop-types\";\nimport React, { Fragment, Component } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Nav from \"react-bootstrap/Nav\";\nimport axios from \"axios\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport { Toast, ToastBody, ToastHeader } from \"reactstrap\";\nimport { ToastContainer } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nexport default class LoginRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      mobile: \"\",\n      password: \"\",\n      otp: true,\n      otpnumber: \"\",\n      token: \"\",\n    };\n    // this.state = {\n    //   email: \"\",\n    //   mobile: \"\",\n    //   password: \"\",\n    // };\n  }\n\n  otpHandler = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    axios\n      .post(\"http://35.154.86.59/api/user/verifyotp\", {\n        mobile: this.state.mobile,\n        //customer_email: this.state.email,\n        otp: this.state.otpnumber,\n      })\n      .then((response) => {\n        console.log(response);\n        //localStorage.setItem(\"user\", response.data.data._id);\n        localStorage.setItem(\"auth-token\", this.state.token);\n        // const location = this.props.location;\n        // if (location.state && location.state.nextPathname) {\n        //   History.push(\"/login-register\");\n        // } else {\n        //   History.push(\"/cart\");\n        // }\n        // const history = useHistory();\n        // history.push(\"/cart\");\n\n        this.props.history.push({\n          pathname: `/cart`,\n        });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        //this.setState({ errormsg: error });\n      });\n  };\n\n  handlechange = (e) => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  loginHandler = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(\"http://35.154.86.59/api/user/login\", {\n        mobile:\n          parseInt(this.state.email) != NaN\n            ? parseInt(this.state.email)\n            : \"null\",\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then((response) => {\n        console.log(response);\n        //localStorage.setItem(\"authec\", response.data.token);\n        localStorage.setItem(\"auth-token\", response.data.token);\n        this.props.history.push(\"/cart\");\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(error.response);\n      });\n  };\n  // otp = true;\n  changeHandler = (e) => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    this.setState({ otp: false });\n    axios\n      .post(\"http://35.154.86.59/api/user/signup\", this.state)\n      .then((response) => {\n        console.log(response);\n        // localStorage.setItem(\"token\", response.data.token);\n        this.setState({\n          token: response.data.token,\n        });\n        //this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n\n    axios\n      .post(\"http://35.154.86.59/api/user/sendotp\", {\n        mobile: this.state.mobile,\n        //customer_email: this.state.email,\n      })\n      .then((response) => {\n        console.log(response);\n        // localStorage.setItem(\"token\", response.data.token);\n        // this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n  render() {\n    console.log(this.state.otp);\n    return (\n      <Fragment>\n        <MetaTags>\n          <title>Buynaa | Login</title>\n          <meta\n            name=\"description\"\n            content=\"Compare page of flone react minimalist eCommerce template.\"\n          />\n        </MetaTags>\n        <LayoutOne headerTop=\"visible\">\n          <div className=\"login-register-area pt-100 pb-100\">\n            <div className=\"container\">\n              <div className=\"row d-flex align-items-center justify-content-center\">\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\n                  {this.state.otp ? (\n                    <div className=\"login-register-wrapper\">\n                      <Tab.Container defaultActiveKey=\"login\">\n                        <Nav\n                          variant=\"pills\"\n                          className=\"login-register-tab-list\"\n                        >\n                          <Nav.Item>\n                            <Nav.Link eventKey=\"login\">\n                              <h4>Login</h4>\n                            </Nav.Link>\n                          </Nav.Item>\n                          <Nav.Item>\n                            <Nav.Link eventKey=\"register\">\n                              <h4>Register</h4>\n                            </Nav.Link>\n                          </Nav.Item>\n                        </Nav>\n                        <Tab.Content>\n                          <Tab.Pane eventKey=\"login\">\n                            <div className=\"login-form-container\">\n                              <div className=\"login-register-form\">\n                                <form onSubmit={this.loginHandler}>\n                                  <input\n                                    type=\"text\"\n                                    name=\"email\"\n                                    placeholder=\"Email / Mobile\"\n                                    value={this.state.email}\n                                    onChange={this.handlechange}\n                                  />\n                                  {/* <input\n                                    type=\"number\"\n                                    name=\"mobile\"\n                                    placeholder=\"Mobile No\"\n                                    value={this.state.mobile}\n                                    onChange={this.handlechange}\n                                  /> */}\n                                  <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    onChange={this.handlechange}\n                                  />\n                                  <div className=\"button-box\">\n                                    <div className=\"login-toggle-btn\"></div>\n                                    <button type=\"submit\">\n                                      <span>Login</span>\n                                    </button>\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                          </Tab.Pane>\n\n                          {/* Register the user now */}\n\n                          <Tab.Pane eventKey=\"register\">\n                            <div className=\"login-form-container\">\n                              <div className=\"login-register-form\">\n                                <form\n                                  className=\"text-center\"\n                                  onSubmit={this.submitHandler}\n                                  method=\"post\"\n                                >\n                                  <input\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    placeholder=\"Enter Your Firstname\"\n                                    value={this.state.firstname}\n                                    onChange={this.changeHandler}\n                                  />\n                                  <input\n                                    type=\"text\"\n                                    name=\"lastname\"\n                                    placeholder=\"Enter Your Lastname\"\n                                    value={this.state.lastname}\n                                    onChange={this.changeHandler}\n                                  />\n                                  <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Your Email\"\n                                    value={this.state.email}\n                                    onChange={this.changeHandler}\n                                  />\n                                  <input\n                                    type=\"number\"\n                                    name=\"mobile\"\n                                    placeholder=\"Enter Your Mobile No.\"\n                                    value={this.state.mobile}\n                                    onChange={this.changeHandler}\n                                  />\n                                  <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    onChange={this.changeHandler}\n                                  />\n                                  <div className=\"button-box\">\n                                    <button type=\"submit\">\n                                      <span>Register</span>\n                                    </button>\n                                  </div>\n                                </form>\n                              </div>\n                            </div>\n                          </Tab.Pane>\n                        </Tab.Content>\n                      </Tab.Container>\n                    </div>\n                  ) : (\n                    <>\n                      <div className=\"login-form-container\">\n                        <div className=\"login-register-form\">\n                          <form onSubmit={this.otpHandler}>\n                            <input\n                              type=\"number\"\n                              name=\"otpnumber\"\n                              placeholder=\"OTP No\"\n                              value={this.state.otpnumber}\n                              onChange={this.handlechange}\n                            />\n                            <div className=\"button-box\">\n                              <div className=\"login-toggle-btn\"></div>\n                              <Button type=\"submit\">\n                                <span>Verify</span>\n                              </Button>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* <div className=\"login-register-area pt-100 pb-100\">\n            <div className=\"container\">\n              <div className=\"row d-flex align-items-center justify-content-center\">\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\n                  <div className=\"login-register-wrapper\">\n                    <Tab.Container defaultActiveKey=\"login\">\n                      <Nav variant=\"pills\" className=\"login-register-tab-list\">\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"login\">\n                            <h4>Login</h4>\n                          </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                          <Nav.Link eventKey=\"register\">\n                            <h4>Register</h4>\n                          </Nav.Link>\n                        </Nav.Item>\n                      </Nav>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"login\">\n                          <div className=\"login-form-container\">\n                            <div className=\"login-register-form\">\n                              <form onSubmit={this.loginHandler}>\n                                <input\n                                  type=\"text\"\n                                  name=\"customer_email\"\n                                  placeholder=\"Email\"\n                                  value={this.state.customer_email}\n                                  onChange={this.handlechange}\n                                />\n                                <div className=\"button-box\">\n                                  <div className=\"login-toggle-btn\"></div>\n                                  <button type=\"submit\">\n                                    <span>Login</span>\n                                  </button>\n                                </div>\n                              </form>\n                            </div>\n                          </div>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"register\">\n                          <div className=\"login-form-container\">\n                            <div className=\"login-register-form\">\n                              <form\n                                className=\" text-center \"\n                                onSubmit={this.submitHandler}\n                                method=\"post\"\n                              >\n                                <input\n                                  type=\"text\"\n                                  name=\"first_name\"\n                                  placeholder=\"Enter Your Firstname\"\n                                  value={this.state.first_name}\n                                  onChange={this.changeHandler}\n                                />\n                                <input\n                                  type=\"text\"\n                                  name=\"last_name\"\n                                  placeholder=\"Enter Your Lastname\"\n                                  value={this.state.last_name}\n                                  onChange={this.changeHandler}\n                                />\n                                <input\n                                  type=\"email\"\n                                  name=\"customer_email\"\n                                  placeholder=\"Enter Your Email\"\n                                  value={this.state.customer_email}\n                                  onChange={this.changeHandler}\n                                />\n                                <input\n                                  type=\"number\"\n                                  name=\"mobile_no\"\n                                  placeholder=\"Enter Your Mobile No.\"\n                                  value={this.state.mobile_no}\n                                  onChange={this.changeHandler}\n                                />\n                                <input\n                                  type=\"number\"\n                                  name=\"sortorder\"\n                                  placeholder=\"Sort Order\"\n                                  value={this.state.sortorder}\n                                  onChange={this.changeHandler}\n                                />\n                                <div className=\"button-box\">\n                                  <button type=\"submit\">\n                                    <span>Register</span>\n                                  </button>\n                                </div>\n                              </form>\n                            </div>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </LayoutOne>\n      </Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}